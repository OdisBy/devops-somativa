name: Continuous Integration

on:
  pull_request:
    branches: [main]

jobs:
  build-docker:
    name: Build Docker
    runs-on: ubuntu-latest
    outputs:
      image-tag: user/app:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (without push)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: user/app:latest

  build-and-tests:
    name: Build Project and run tests on Docker
    runs-on: ubuntu-latest
    needs: build-docker
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create .env file from GitHub Secrets
        run: |
          cp .env.example .env
          echo "REACT_APP_FIREBASE_API_KEY=${{ secrets.REACT_APP_FIREBASE_API_KEY }}" >> .env
          echo "REACT_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}" >> .env
          echo "REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "REACT_APP_FIREBASE_APP_ID=${{ secrets.REACT_APP_FIREBASE_APP_ID }}" >> .env
          echo "REACT_APP_FIREBASE_MEASUREMENT_ID=${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}" >> .env

      - name: Use Docker image from build-docker
        run: |
          docker run --rm ${{ needs.build-docker.outputs.image-tag }} npm test -- --ci --watchAll=false

  notify-discord:
    name: Notify Discord
    runs-on: ubuntu-latest
    needs: [build-docker, build-and-tests]
    if: always()
    steps:
      - name: Notify Discord
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
